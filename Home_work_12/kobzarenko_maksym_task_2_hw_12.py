'''Создаем функцию в аргументы которой входит: функция, итерабельный объект и необязательный аргумент инициализатор
который по умолчанию равен "None". Функция должна выполнять условия функции-аргумента, запоминать результат выполнения
этой функции-аргумента и дальнейшого использования этого результата в функции-аргументе. Условие заключаеться в том чтоб
функции-аргумент должна оперировать 2-мя елементами из итерабельного объекта. Функция выводит только одно значение и не
создает нового объекта'''


def my_reduce(function, iterable, initializer=None):
    it = iter(iterable)  # Создаем переменную-итератор из итерабельного объекта

    # Теперь мы должны выбрать какой первый елемент будет брать функция-аргумент

    if initializer is None: # Если инициализатор не был указан в аргументе то наша функция-аргумент возьмет за первый
        # аргумент первое значение итератора
        value = next(it)

    else:  # Если инициализатор был указан в аргументе то наша функция-аргумент возьмет значения инициализатора за
        # первый аргумент
        value = initializer
    # Проходим по всем елементам итератора и выполняем условия функции-аргумента
    for element in it:
        value = function(value, element)# Перезаписываем результат выполнения функции-аргумент в нашу переменную "value"
        # которая является первым аргументом для нашей функции-аргумент

    # Возвращаем конечный результат выполнения функции-аргумента
    return value


z = my_reduce(lambda a, b: a + b, (1, 2, 3, 5, 8), 10)
print(z)
