# Создаем функцию-генератор которая будет находить факториал от чисел от 1 до числа указаного в аргументе.
def fact(number):
    pr = 1  # Локальна пременная произведения
    for i in range(1, number + 1):  # Создаем цикл в котором будем брать факториал числа от 1 до числа
        # указаного в аргументе.
        pr *= i
        yield pr


# my_number = fact(6)
# print(next(my_number))
# print(next(my_number))
# print(next(my_number))

# Создаем функцию-генератор которая будет создавать вложенные списки в списке и выводить эти вложенные списки по одному
def massive():
    y = [[stolb for stolb in range(4)] for stroka in range(3)]  # С помощью list comprehenshion создаем вложенные списки
    for element in y:  # С помощью цикла проходим по каждому елементы переменной "у" и выводим его
        yield element


# x = masive()
# print(next(x))
# print(next(x))


# Создаем функцию-генератор геометрической прогрессии,которя принимает 3 аргумента. Первый аргумент будет первым
# елементом прогрессии, второй аргумент принимает шаг геометрчиской прогрессии, третий аргумент принимает глубину
# прогрессий (то есть сколько раз будет выполняться функция-генератор)
def geometric_progression(x, y, d=100):
    """х - первым елемент прогрессии, у - шаг геометрчиской прогрессии, d - колличество прогрессий
    (по умолчанию равен 100)  """

    for i in range(d):
        i = x * y
        x = i
        yield i

# pop = geometric_progression(10, 2, 10)
# print(next(pop))
# print(next(pop))
# print(next(pop))
